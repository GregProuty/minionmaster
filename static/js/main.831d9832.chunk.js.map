{"version":3,"sources":["logo.png","Form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Wrapper","styled","div","Button","input","Label","label","Select","select","Center","SelectWrapper","Text","p","Form","getResult","useState","bonus","setBonus","ac","setAc","minions","setMinions","dmgDie","setDmgDie","dmgBonus","setDmgBonus","critRange","setCritRange","critMultiplier","setCritMultiplier","className","onSubmit","e","preventDefault","onChange","target","value","type","name","Body","Img","img","critRangeMap","1","2","3","App","result","setResult","src","logo","times","totalDmg","hits","dmgRolls","i","roll","Math","ceil","random","d20","Number","includes","dmgRoll","push","console","log","join","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,kC,ymCCI3C,IAAMC,EAAUC,IAAOC,IAAV,KAMPC,EAASF,IAAOG,MAAV,KAKNC,EAAQJ,IAAOK,MAAV,KAGLC,EAASN,IAAOO,OAAV,KAKNC,EAASR,IAAOC,IAAV,KAMNQ,EAAgBT,IAAOC,IAAV,KAObS,EAAOV,IAAOW,EAAV,KAoFKC,EAjFF,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACJC,mBAAS,GADL,mBACvBC,EADuB,KAChBC,EADgB,OAEVF,mBAAS,GAFC,mBAEvBG,EAFuB,KAEnBC,EAFmB,OAGAJ,mBAAS,GAHT,mBAGvBK,EAHuB,KAGdC,EAHc,OAIFN,mBAAS,KAJP,mBAIvBO,EAJuB,KAIfC,EAJe,OAKER,mBAAS,GALX,mBAKvBS,EALuB,KAKbC,EALa,OAMIV,mBAAS,KANb,mBAMvBW,EANuB,KAMZC,EANY,OAOcZ,mBAAS,KAPvB,mBAOvBa,EAPuB,KAOPC,EAPO,KAS9B,OACE,yBAAKC,UAAU,QACb,0BAAMC,SAAU,SAAAC,GACdA,EAAEC,iBACFnB,EAAUE,EAAOE,EAAIE,EAASE,EAAQE,EAAUE,EAAWE,KAG3D,kBAAC5B,EAAD,KACE,kBAACK,EAAD,CAAO6B,SAAU,SAAAF,GAAC,OAAIf,EAASe,EAAEG,OAAOC,SAAxC,iBAC4B,2BAAOC,KAAK,SAASC,KAAK,WAEtD,kBAAC7B,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,qBACA,kBAACJ,EAAD,CACE6B,MAAOd,EACPY,SAAU,SAAAF,GAAC,OAAIT,EAAUS,EAAEG,OAAOC,SAElC,4BAAQA,MAAM,KAAd,MACA,4BAAQA,MAAM,KAAd,MACA,4BAAQA,MAAM,KAAd,MACA,4BAAQA,MAAM,MAAd,OACA,4BAAQA,MAAM,MAAd,UAIN,kBAAC3B,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,sBACA,kBAACJ,EAAD,CACE6B,MAAOV,EACPQ,SAAU,SAAAF,GAAC,OAAIL,EAAaK,EAAEG,OAAOC,SAErC,4BAAQA,MAAM,KAAd,MACA,4BAAQA,MAAM,KAAd,SACA,4BAAQA,MAAM,KAAd,YAIN,kBAAC3B,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,yBACA,kBAACJ,EAAD,CACE6B,MAAOR,EACPM,SAAU,SAAAF,GAAC,OAAIH,EAAkBG,EAAEG,OAAOC,SAE1C,4BAAQA,MAAM,KAAd,MACA,4BAAQA,MAAM,KAAd,MACA,4BAAQA,MAAM,KAAd,SAIN,kBAAC/B,EAAD,CAAO6B,SAAU,SAAAF,GAAC,OAAIP,EAAYO,EAAEG,OAAOC,SAA3C,iBAC4B,2BAAOC,KAAK,SAASC,KAAK,cAEtD,kBAACjC,EAAD,CAAO6B,SAAU,SAAAF,GAAC,OAAIb,EAAMa,EAAEG,OAAOC,SAArC,cACyB,2BAAOC,KAAK,SAASC,KAAK,QAEnD,kBAACjC,EAAD,CAAO6B,SAAU,SAAAF,GAAC,OAAIX,EAAWW,EAAEG,OAAOC,SAA1C,sBACiC,2BAAOC,KAAK,SAASC,KAAK,aAE3D,kBAAC7B,EAAD,KACE,kBAACN,EAAD,CAAQkC,KAAK,SAASD,MAAM,c,gPCxGxC,IAAMG,EAAOtC,IAAOC,IAAV,KAKJsC,EAAMvC,IAAOwC,IAAV,KAGHC,EAAe,CACnBC,EAAG,CAAC,IACJC,EAAG,CAAC,GAAI,IACRC,EAAG,CAAC,GAAI,GAAI,KAkDCC,EAvBH,WAAO,IAAD,EACY/B,mBAAS,IADrB,mBACTgC,EADS,KACDC,EADC,KAMhB,OACE,yBAAKlB,UAAU,OACb,6CACA,kBAACU,EAAD,CAAKS,IAAKC,MACV,kBAACX,EAAD,KACE,kBAAC,EAAD,CAAMzB,UARM,SAACE,EAAOE,EAAIiC,EAAO7B,EAAQE,EAAUE,EAAWE,GAChEoB,EA5BS,SAAChC,EAAOE,EAAIiC,EAAO7B,EAAQE,EAAUE,EAAWE,GAI3D,IAHA,IAAIwB,EAAW,EACXC,EAAO,EACLC,EAAW,GACRC,EAAI,EAAGA,EAAIJ,EAAOI,IAAK,CAC9B,IAAMC,EAAOC,KAAKC,KAAqB,GAAhBD,KAAKE,UACtBC,EAAMJ,EAAOK,OAAO7C,GAG1B,GAAa,KAATwC,GAAed,EAAamB,OAAOnC,IAAYoC,SAASL,KAAKC,KAAqB,GAAhBD,KAAKE,WAAiB,CAC1F,IAAMI,EAAUN,KAAKC,KAAKD,KAAKE,SAAWE,OAAOvC,IAAWuC,OAAOrC,GACnE8B,EAASU,KAAK,OAAUD,EAAUF,OAAOjC,IACzCwB,GAAsB,EAAVW,EACZV,SACK,GAAIO,GAAO1C,EAAI,CACpB,IAAM6C,EAAUN,KAAKC,KAAKD,KAAKE,SAAWE,OAAOvC,IAAWuC,OAAOrC,GACnE8B,EAASU,KAAKD,GACdX,GAAYW,EACZV,IACAY,QAAQC,IAAIH,IAGhB,MAAO,CAAC,iBAAD,OAAkBX,GAAlB,gBAAuCC,GAAvC,uBAA+DC,EAASa,KAAK,OAMxEX,CAAKxC,EAAOE,EAAIiC,EAAO7B,EAAQE,EAAUE,EAAWE,QAS3DmB,GACC,6BACE,4BAAKA,EAAO,IACZ,4BAAKA,EAAO,IACZ,4BAAKA,EAAO,OCjDFqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpB,QAAQoB,MAAMA,EAAMC,a","file":"static/js/main.831d9832.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.095c342d.png\";","import React, { useState } from 'react'\nimport './App.css'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n`\nconst Button = styled.input`\n    width: 8em;\n    height: 4em;\n    // background-color: blue;\n`\nconst Label = styled.label`\n    margin: 1em;\n`\nconst Select = styled.select`\n    width: 5em;\n    // height: 85%;\n\n`\nconst Center = styled.div`\n    // display: flex;\n    // flex-direction: row;\n    width: 100%\n    // justify-content: center;\n`\nconst SelectWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    width: 60%;\n    margin-left: 20%;\n`\nconst Text = styled.p`\n    width: 8em;\n`\nconst Form = ({ getResult }) => {\n  const [bonus, setBonus] = useState(0)\n  const [ac, setAc] = useState(0)\n  const [minions, setMinions] = useState(0)\n  const [dmgDie, setDmgDie] = useState('8')\n  const [dmgBonus, setDmgBonus] = useState(0)\n  const [critRange, setCritRange] = useState('1')\n  const [critMultiplier, setCritMultiplier] = useState('3')\n\n  return (\n    <div className='Form'>\n      <form onSubmit={e => {\n        e.preventDefault()\n        getResult(bonus, ac, minions, dmgDie, dmgBonus, critRange, critMultiplier)\n      }}\n      >\n        <Wrapper>\n          <Label onChange={e => setBonus(e.target.value)}>\n                        Attack Bonus: <input type='number' name='bonus' />\n          </Label>\n          <Center>\n            <SelectWrapper>\n              <Text>Base Damage:</Text>\n              <Select\n                value={dmgDie}\n                onChange={e => setDmgDie(e.target.value)}\n              >\n                <option value='4'>d4</option>\n                <option value='6'>d6</option>\n                <option value='8'>d8</option>\n                <option value='10'>d10</option>\n                <option value='12'>d12</option>\n              </Select>\n            </SelectWrapper>\n          </Center>\n          <Center>\n            <SelectWrapper>\n              <Text>Threat Range:</Text>\n              <Select\n                value={critRange}\n                onChange={e => setCritRange(e.target.value)}\n              >\n                <option value='1'>20</option>\n                <option value='2'>19-20</option>\n                <option value='3'>18-20</option>\n              </Select>\n            </SelectWrapper>\n          </Center>\n          <Center>\n            <SelectWrapper>\n              <Text>Crit Multiplier:</Text>\n              <Select\n                value={critMultiplier}\n                onChange={e => setCritMultiplier(e.target.value)}\n              >\n                <option value='2'>x2</option>\n                <option value='3'>x3</option>\n                <option value='4'>x4</option>\n              </Select>\n            </SelectWrapper>\n          </Center>\n          <Label onChange={e => setDmgBonus(e.target.value)}>\n                        Damage Bonus: <input type='number' name='dmgBonus' />\n          </Label>\n          <Label onChange={e => setAc(e.target.value)}>\n                        Target AC: <input type='number' name='ac' />\n          </Label>\n          <Label onChange={e => setMinions(e.target.value)}>\n                        Number of Minions: <input type='number' name='minions' />\n          </Label>\n          <Center>\n            <Button type='submit' value='Roll' />\n          </Center>\n\n        </Wrapper>\n      </form>\n\n    </div>\n  )\n}\n\nexport default Form\n","import React, { useState } from 'react'\nimport './App.css'\nimport Form from './Form'\nimport styled from 'styled-components'\nimport logo from './logo.png'\n\nconst Body = styled.div`\n  display: flex;\n  margin-top: 2em;\n  justify-content: center;\n`\nconst Img = styled.img`\n  width: 6em;\n`\nconst critRangeMap = {\n  1: [20],\n  2: [19, 20],\n  3: [18, 19, 20]\n}\n\nconst roll = (bonus, ac, times, dmgDie, dmgBonus, critRange, critMultiplier) => {\n  let totalDmg = 0\n  let hits = 0\n  const dmgRolls = []\n  for (let i = 0; i < times; i++) {\n    const roll = Math.ceil(Math.random() * 20)\n    const d20 = roll + Number(bonus)\n\n    // If Crit:\n    if (roll === 20 && critRangeMap[Number(critRange)].includes(Math.ceil(Math.random() * 20))) {\n      const dmgRoll = Math.ceil(Math.random() * Number(dmgDie)) + Number(dmgBonus)\n      dmgRolls.push('crit' + (dmgRoll * Number(critMultiplier)))\n      totalDmg += dmgRoll * 2\n      hits++\n    } else if (d20 >= ac) {\n      const dmgRoll = Math.ceil(Math.random() * Number(dmgDie)) + Number(dmgBonus)\n      dmgRolls.push(dmgRoll)\n      totalDmg += dmgRoll\n      hits++\n      console.log(dmgRoll)\n    }\n  }\n  return [`Total Damage: ${totalDmg}`, `Hits: ${hits}`, `DamageRolls: ${dmgRolls.join(' ')}`]\n}\nconst App = () => {\n  const [result, setResult] = useState('')\n\n  const getResult = (bonus, ac, times, dmgDie, dmgBonus, critRange, critMultiplier) => {\n    setResult(roll(bonus, ac, times, dmgDie, dmgBonus, critRange, critMultiplier))\n  }\n  return (\n    <div className='App'>\n      <h1>Minion Master</h1>\n      <Img src={logo} />\n      <Body>\n        <Form getResult={getResult} />\n      </Body>\n      {result &&\n        <div>\n          <h3>{result[0]}</h3>\n          <h3>{result[1]}</h3>\n          <h3>{result[2]}</h3>\n        </div>}\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}